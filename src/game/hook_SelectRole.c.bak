#include <stdlib.h>
#include <stdio.h>
#include <string.h>
#include "game_type.h"


extern void pgm2log(const char *fmt, ...);
#define sub_10015CA0						FUNC16(0x10015CA0)
#define sub_10011B04						FUNC16(0x10011B04)
#define sub_1002E5F8						FUNC16(0x1002E5F8)
#define sub_10004B62						FUNC16(0x10004B62)
#define sub_10042ABC						FUNC16(0x10042ABC)
#define sub_1000F182						FUNC16(0x1000F182)
#define sub_1000F192						FUNC16(0x1000F192)
#define sub_1002FE9C						FUNC16(0x1002FE9C)
#define sub_1000EEB2						FUNC16(0x1000EEB2)
#define sub_100300BC						FUNC16(0x100300BC)
#define sub_100004EE						FUNC16(0x100004EE)
#define sub_10004116						FUNC16(0x10004116)
#define sub_10081E32						FUNC16(0x10081E32)
#define sub_100827F4						FUNC16(0x100827F4)
#define sub_100035CA						FUNC16(0x100035CA)
#define sub_10003FA4						FUNC16(0x10003FA4)
#define sub_1008219E						FUNC16(0x1008219E)
#define sub_10094EFC						FUNC16(0x10094EFC)
#define sub_1001227E						FUNC16(0x1001227E)
#define CreatOBJ_100813E0						FUNC16(0x100813E0)
#define sub_10086766						FUNC16(0x10086766)
#define sub_1009AEEC						FUNC16(0x1009AEEC)
#define sub_10081C08						FUNC16(0x10081C08)
#define sub_10081C70						FUNC16(0x10081C70)
#define sub_100814E6						FUNC16(0x100814E6)
#define sub_10011BC2						FUNC16(0x10011BC2)
#define sub_10015D4A						FUNC16(0x10015D4A)
#define sub_10125F44						FUNC16(0x10125F44)
#define sub_10083406						FUNC16(0x10083406)
#define ScreenUpdate_1002F81A				FUNC16(0x1002F81A)


#define BIOS_10126378						FUNC32(0x10126378)
#define	sub_101263D8						FUNC32(0x101263D8)//JMPOUT(0x3128)
#define	sub_101263C0						FUNC32(0x101263C0)//JMPOUT(0x30B8)

#define	v2001058						V8(0x2001058)//
#define	v20020484						V8(0x20020484)//Region
#define	vMainFsm						V8(0x20020104)//主状态机
#define	v20020105						V8(0x20020105)//
#define	v20020106						V8(0x20020105)//
#define	v20020107						V8(0x20020107)//
#define	v2002010A						V8(0x2002010A)//
#define	v2002045A						V8(0x2002045A)//
#define	v200203C4						V8(0x200203C4)//
#define	v200203FC						V8(0x200203FC)//
#define	v10175ED8						V8(0x10175ED8)//
#define	v10158AF8						V8(0x10158AF8)//

#define	p20020398						P32(0x20020398)//

#define	p200203C6						P32(0x200203C6)//

#define	p20061C6C						P32(0x20061C6C)//
#define	p20061DFC						P32(0x20061DFC)//
#define	p20061ADC						P32(0x20061ADC)//
#define	p20061AB4						P32(0x20061AB4)//
#define	p1012D980						P32(0x1012D980)//
#define	p10433B68						P32(0x10433B68)//
#define	p10433768						P32(0x10433768)//
#define	p10433868						P32(0x10433868)//
#define	p10433968						P32(0x10433968)//
#define	p10433F68						P32(0x10433F68)//
#define	p10433C68						P32(0x10433C68)//
#define	p10433E68						P32(0x10433E68)//
#define	p10434068						P32(0x10434068)//
#define	p10434168						P32(0x10434168)//
#define	p10431A68						P32(0x10431A68)//
#define	p1042F668						P32(0x1042F668)//
#define	p1042F768						P32(0x1042F768)//
#define	p10430768						P32(0x10430768)//
#define	p10430968						P32(0x10430968)//
#define	p10430A68						P32(0x10430A68)//
#define	p10430B68						P32(0x10430B68)//
#define	p10430C68						P32(0x10430C68)//
#define	p10395AB4						P32(0x10395AB4)//
#define	p10395BB4						P32(0x10395BB4)//
#define	p10395CB4						P32(0x10395CB4)//
#define	p10395DB4						P32(0x10395DB4)//
#define	p10395EB4						P32(0x10395EB4)//
#define	p10175F54						P32(0x10175F54)//
#define	p10176AC4						P32(0x10176AC4)//
#define	p10176300						P32(0x10176300)//
#define	p20061878						P32(0x20061878)//
#define	p101762C8						P32(0x101762C8)//

#define	p200203E2						P8(0x200203E2)//这个有关是否能选唐僧
#define	p200203E6						P8(0x200203E6)//
#define	p200203A4						P8(0x200203A4)//
#define	p10175E2C						P8(0x10175E2C)//

#define	p2002039C						P16(0x2002039C)//
#define	p10175DCC						P16(0x10175DCC)//
#define	p10175E14						P16(0x10175E14)//
#define	p10175D54						P16(0x10175D54)//
#define	v101764B4						V16(0x101764B4)//
#define	v101764BC						V16(0x101764BC)//
int hook_SelectPlayer(int bPlayerNo)//创建选人界面sub_1008C63C()
{
	int i;
	int v43[10];
	int v46[10];
	int v54;
	int v56;
//	int v8;
//	int v60;
//	int v3;
//	int v4;
//	int v52;
//	int v53;
	sub_100827F4();
	sub_10015CA0();
	sub_10011B04();
	sub_1002E5F8();
	sub_10004B62();
	sub_100035CA();
	sub_10042ABC();
	sub_1000F182();
	sub_1002FE9C();
	sub_1000EEB2(0, -1);
	sub_100300BC();
	sub_100004EE();
	sub_10004116(2, 18, p1012D980);
	sub_10081E32();
//	RoleIndexMax = 10;
	v2002010A = 1;
	sub_10004116(2, 20, p10433B68);
	sub_10004116(2, 22, p10433C68);
	sub_10004116(2, 21, p10433E68);
	v200203FC = sub_10004116(2, 19, p10431A68);
	sub_10004116(2, 27, p1042F668);
	sub_10004116(2, 16, p1042F768);
	sub_10004116(2, 17, p10430768);
	sub_10004116(2, 23, p10430968);
	sub_10004116(2, 24, p10430A68);
	sub_10004116(2, 25, p10430B68);
	sub_10004116(2, 26, p10430C68);
	sub_10004116(2, 0, p10395AB4);
	sub_10004116(2, 1, p10395BB4);
	sub_10004116(2, 2, p10395CB4);
	sub_10004116(2, 3, p10395DB4);
	sub_10004116(2, 4, p10395EB4);
	sub_10004116(2, 28, p10433768);
	sub_10004116(2, 29, p10433868);
	sub_10004116(2, 30, p10433968);
	sub_10004116(2, 31, p10434068);
	sub_10004116(2, 42, p10434168);
	sub_10003FA4(2, 27, 1, 31, 5);
	sub_1008219E();
	sub_10003FA4(2, 16, 1, 14, 5);
	sub_10003FA4(2, 16, 17, 14, 5);
	sub_10003FA4(2, 16, 33, 15, 5);
	sub_10003FA4(2, 16, 49, 14, 5);

//    v55 = CreatOBJ_100813E0(0, 25, 50, 0, 0, 600, 0);
//    sub_1001227E(v55, 0x101764C4);
//    *(_WORD *)(v55 + 302) = 0;
//    v56 = CreatOBJ_100813E0(0, 305, 50, 0, 0, 600, 0);
//    sub_1001227E(v56, 0x101764C4);
//    *(_WORD *)(v56 + 302) = 1;
//    v57 = CreatOBJ_100813E0(0, 25, 162, 0, 0, 600, 0);
//    sub_1001227E(v57, 0x101765B0);
//    *(_WORD *)(v57 + 302) = 2;
//    v58 = CreatOBJ_100813E0(0, 305, 162, 0, 0, 600, 0);
//    sub_1001227E(v58, 0x101765B0);
//    *(_WORD *)(v58 + 302) = 3;

	for ( i = 0; i < 10; i = (i + 1) & 0xFFFF )
		v43[i] = 0;
	for ( i = 0; i < 4; i = (i + 1) & 0xFFFF )
		p20061ADC[i] = 0;
	sub_10086766();
	for ( i = 0; i < 4; i = (i + 1) & 0xFFFF )
	{
		if ( bPlayerNo && bPlayerNo != 2 )
			p2002039C[i] = bPlayerNo == 1 || bPlayerNo == 3;
		else
			p2002039C[i] = 0;
		v46[i] = 2;
	}
	v46[bPlayerNo] = 0;

//sub_10081C70(bPlayerNo);//显示提示插卡动画
	v46[bPlayerNo] = 3;
	v43[p2002039C[bPlayerNo]] = 1;
//	v41[bPlayerNo] = 15;
	//p20061AB4存储了小头像的OBJ，+28是x,+30是y , 这里是创建角色名和名字后面的云
	p20061ADC[bPlayerNo] = sub_10081C08(bPlayerNo,p20061AB4[p2002039C[bPlayerNo]] + 28,p20061AB4[p2002039C[bPlayerNo]] + 30);
	sub_100814E6(bPlayerNo);//一个比较大的函数
	v54 = CreatOBJ_100813E0(0, 0, 0, 21, V8(0x10176AC4) + bPlayerNo, 5 * bPlayerNo + 101, 0);
	V8(v54 + 230) = 5;
	V8(v54 + 114) = 1;//画云
	v54 = CreatOBJ_100813E0(0, 0, 0, 22, V8(0x10176AC4+4) + bPlayerNo, 5 * bPlayerNo + 102, 0);
	V8(v54 + 230) = 5;
	V8(v54 + 114) = 1;//画云
	v54 = CreatOBJ_100813E0(0, 0, 0, V8(0x10175DCC) + bPlayerNo, V8(0x10176AC4+8) + bPlayerNo, 5 * bPlayerNo + 99, 0);
	V8(v54 + 230) = 5;
	V8(v54 + 114) = 1;//画云
	p20061878[bPlayerNo] =  sub_10011BC2(0x10176300, V8(0x10175E14+4) + bPlayerNo,V8(0x10175E14+8) + bPlayerNo,0,V8(0x10175E2C) + bPlayerNo);
	V8(p20061878[bPlayerNo] + 302) = bPlayerNo;
	V8(p20061878[bPlayerNo] + 210) = 1;
	V8(p20061878[bPlayerNo] + 208) = 5 * bPlayerNo + 100;
	BIOS_10126378(V8(p20061878[bPlayerNo] + 76),V8(p20061878[bPlayerNo] + 208));
	V8(p20061878[bPlayerNo] + 80) =	V8( 0x10175D54 + p2002039C[bPlayerNo]);
	V8(p20061878[bPlayerNo] + 142) = V8( 0x10175D54 + p2002039C[bPlayerNo]);
	V8(p20061878[bPlayerNo] + 58) = p2002039C[bPlayerNo]+2;	
	sub_1001227E(p20061878[bPlayerNo],0x101762C8);

//	sub_1001227E(P8(v55)+bPlayerNo,0x10175ED8);
	sub_1000F192(0,(v101764B4 + bPlayerNo)&0xFF,(v101764BC + bPlayerNo)&0xFF,15);
	sub_100300BC();

	for (i=0;i<4 ;i=(i+1)&0xFFFF )
		p200203A4[i]= 0;
	CreatOBJ_100813E0(0, 198, 196, 17, 315, 700, 0);//画时间 十位数
	CreatOBJ_100813E0(0, 223, 196, 17, 312, 700, 0);//画时间 个位数
	CreatOBJ_100813E0(0, -177, 6, 27, 311, 701, 0);//画时间 描边
//	v58 = 20
//	v3 = sub_10125F44(v58,10);//做了一个加密还是随机运算
//	V8(v52+58)=v3 + 312;
//	v4 = sub_10125F44(v58,10);
//	V8(v53+58)=v4 + 312;
//-----------------到此画图完毕下面进入循环-------------------------





//v60 = 60;

	while (1)
	{

		ScreenUpdate_1002F81A();
		v200203C4 = 0;
		
		v56 = v10158AF8;
		i=0;
		if (i<4)
		{
			sub_10083406(i,v56, v43);
		}
		sub_10012160(p20061ADC[i]);
		p20061ADC[i] = sub_10081C08(i,p20061AB4[p2002039C[i]]+28,p20061AB4[p2002039C[i]]+30);
		sub_100814E6(i);
		

		v46[1] = v43[2];
		v43[1] = v46[2];

	}





	return 1;
}

